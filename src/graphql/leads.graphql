type Lead {
  leadId: String!
  email: String
  phone: String
  name: String
  age: Int
  valor_total_plano: Float
  status: StatusEnum
  obs: String
  createdAt: String
  updatedAt: String
}

enum StatusEnum {
  NOVO
  CANCELADO
  FECHADO
  NEGOCIANDO
}

input CreateLeadInput {
  email: String
  phone: String
  name: String
  age: Int
  valor_total_plano: Float
  obs: String
}

input UpdateLeadInput {
  leadId: String
  email: String
  phone: String
  name: String
  age: Int
  valor_total_plano: Float
  obs: String
}

type Query {
  lead(leadId: String!): Lead
  leadsByEmployee(employeeUserId: String!): [Lead]!
  leadsByManager(managerUserId: String!): [Lead]!
}

type Mutation {
  createLead(createLeadInput: CreateLeadInput!): Lead!
  updateLead(updateLeadInput: UpdateLeadInput!): Lead!
  removeLead(leadId: Int!): Lead
}
